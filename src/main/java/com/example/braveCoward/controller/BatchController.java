package com.example.braveCoward.controller;

import org.springframework.batch.core.Job;
import org.springframework.batch.core.JobExecution;
import org.springframework.batch.core.JobParameters;
import org.springframework.batch.core.JobParametersBuilder;
import org.springframework.batch.core.launch.JobLauncher;
import org.springframework.web.bind.annotation.*;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@RestController
@RequestMapping("/batch")
public class BatchController {

    private final JobLauncher jobLauncher;
    private final Job emailJob;

    public BatchController(JobLauncher jobLauncher, Job emailJob) {
        this.jobLauncher = jobLauncher;
        this.emailJob = emailJob;
    }

    @GetMapping("/sendEmails")
    public String sendEmails() {
        try {
            JobParameters params = new JobParametersBuilder()
                .addLong("time", System.currentTimeMillis())
                .toJobParameters();

            JobExecution jobExecution = jobLauncher.run(emailJob, params);
            log.info("üì® Ïù¥Î©îÏùº Ï†ÑÏÜ° Batch Ïã§ÌñâÎê®. Ïã§Ìñâ ID: {}", jobExecution.getId());

            return "‚úÖ Spring Batch Job Ïã§ÌñâÎê®! (Execution ID: " + jobExecution.getId() + ")";
        } catch (Exception e) {
            log.error("Î∞∞Ïπò Ïã§Ìñâ Ïã§Ìå®: {}", e.getMessage());
            return "Spring Batch Ïã§Ìñâ Ïã§Ìå®: " + e.getMessage();
        }
    }
}