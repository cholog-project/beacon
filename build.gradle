plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	// security
	implementation 'org.springframework.security:spring-security-crypto:6.2.2'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// jwt
	implementation 'com.auth0:java-jwt:4.4.0'

	// health check
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// redisson
	implementation 'org.redisson:redisson-spring-boot-starter:3.35.0'

	// QueryDSL (Jakarta 기반)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	// 필요시 jakarta API 추가
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled=false
}

sourceSets {
	main.java.srcDir 'build/generated/sources/annotationProcessor/java/main'
}

clean {
	delete file('build/generated/sources/annotationProcessor/java/main')
}
