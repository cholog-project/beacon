name: beacon CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/backend_key.pem
          chmod 600 ~/.ssh/backend_key.pem
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application (Server builds & runs)
        run: |
          ssh -i ~/.ssh/backend_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /home/ubuntu/beacon
          git pull origin main  # 최신 소스 가져오기
          sudo fuser -k 8080/tcp || true  # 기존 프로세스 종료

          # 환경 변수 저장
          echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
          echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env

          # Gradle 빌드 수행
          ./gradlew clean build -x test  # 서버에서 직접 빌드

          # 실행 권한 부여
          chmod +x build/libs/braveCoward-0.0.1-SNAPSHOT.jar

          # 환경 변수 적용 후 실행
          export $(grep -v '^#' .env | xargs)
          nohup java -jar -Dspring.config.location=file:/home/ubuntu/beacon/src/main/resources/application.yml \
                      build/libs/braveCoward-0.0.1-SNAPSHOT.jar > logs/deploy.log 2>&1 &

          # 헬스 체크 (5초 대기 후)
          sleep 5
          curl -X GET http://${{ secrets.SERVER_HOST }}:8080/actuator/health || echo "⚠️ Health check failed!"
          EOF
